!function(t){var i={};function s(e){if(i[e])return i[e].exports;var h=i[e]={i:e,l:!1,exports:{}};return t[e].call(h.exports,h,h.exports,s),h.l=!0,h.exports}s.m=t,s.c=i,s.d=function(t,i,e){s.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:e})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,i){if(1&i&&(t=s(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(s.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var h in t)s.d(e,h,function(i){return t[i]}.bind(null,h));return e},s.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(i,"a",i),i},s.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},s.p="/build/",s(s.s=0)}([function(t,i,s){"use strict";s.r(i);var e=Phaser.Class({Extends:Phaser.Physics.Arcade.Sprite,initialize:function(t,i,s,e){Phaser.Physics.Arcade.Sprite.call(this,t,i,35,"enemy"),this.from_x=i,this.to_x=s,this.way=1,this.x_place=i,this.height=35,this.y_loc=e,this.setPosition(this.x_place,this.y_loc)},preUpdate:function(){1===this.way?(this.x_place+=2.5,this.x_place>this.to_x&&(this.way=-1)):(this.x_place-=2.5,this.x_place<this.from_x&&(this.way=1)),this.setPosition(this.x_place,this.y_loc)}});var h=class extends Phaser.Scene{constructor(){super({key:"play_game"}),this.Enemy=e}preload(){this.load.image("out_way","assets/finish.png"),this.load.image("carrot","assets/carrot.png"),this.load.image("rabbit","assets/rabbit.png"),this.load.image("enemy","assets/enemy.png"),this.load.image("ground","assets/ground.jpg"),this.load.image("platform","assets/platforms.jpg"),this.load.image("hole","assets/hole.jpg")}create(){this.is_down=!1,this.is_fly=!1,this.fly_time=80,this.cameras.main.setBounds(0,0,3840,this.sys.game.config.height),this.physics.world.setBounds(0,0,3840,this.sys.game.config.height),this.finish=this.physics.add.staticGroup(),this.finish.create(3600,this.sys.game.config.height-150,"out_way"),this.holes=this.physics.add.staticGroup(),this.holes.create(850,this.sys.game.config.height-10,"hole"),this.holes.create(1750,this.sys.game.config.height-10,"hole"),this.holes.create(1850,this.sys.game.config.height-10,"hole"),this.platforms=this.physics.add.staticGroup(),this.platforms.create(400,this.sys.game.config.height-20,"ground"),this.platforms.create(1300,this.sys.game.config.height-20,"ground"),this.platforms.create(2280,this.sys.game.config.height-20,"ground"),this.platforms.create(3080,this.sys.game.config.height-20,"ground"),this.platforms.create(3880,this.sys.game.config.height-20,"ground"),this.platforms.create(4580,this.sys.game.config.height-20,"ground");const t=this.sys.game.config.height-89;this.enemys=this.physics.add.group({allowGravity:!1}),this.enemys.add(new this.Enemy(this,400,600,t),!0),this.enemys.add(new this.Enemy(this,1100,1300,t),!0),this.enemys.add(new this.Enemy(this,1250,1600,t),!0),this.enemys.add(new this.Enemy(this,3e3,3300,t),!0),this.rabbit=this.physics.add.image(250,this.sys.game.config.height-140,"rabbit").setActive().setVelocity(0,0),this.rabbit.setBounce(.2),this.rabbit.setCollideWorldBounds(!0),this.physics.add.collider(this.rabbit,this.platforms),this.physics.add.collider(this.enemys,this.platforms),this.physics.add.overlap(this.rabbit,this.enemys,this.lose,null,this),this.physics.add.overlap(this.rabbit,this.finish,this.win,null,this),this.physics.add.overlap(this.rabbit,this.holes,this.lose,null,this),this.cameras.main.startFollow(this.rabbit,!0,.05,.05),this.carrot=this.add.image(-10,-10,"carrot"),this.input.on("pointerdown",t=>{this.is_down=!0,this.carrot.x=t.worldX,this.carrot.y=t.worldY+this.carrot.height/2}),this.input.on("pointerup",()=>{this.is_down=!1,this.is_fly=!1,this.carrot.x=-10,this.carrot.y=-10})}lose(){alert("ooops you lose"),this.rabbit.x=250,this.rabbit.y=this.sys.game.config.height-140,this.is_fly=!0}win(){alert("you win"),this.rabbit.x=250,this.rabbit.y=this.sys.game.config.height-140,this.is_fly=!0}update(){var t;!this.is_fly&&this.fly_time<80&&(this.fly_time+=1),-10===(t=this).carrot.x?(t.is_move=!1,t.rabbit.setVelocityX(0)):t.carrot.x-45>t.rabbit.x?(t.is_move=!0,t.rabbit.setVelocityX(250)):t.carrot.x+45<t.rabbit.x&&(t.is_move=!0,t.rabbit.setVelocityX(-240)),-10===t.carrot.y||t.carrot.y<32*t.game.config.height/100&&t.fly_time>0&&(t.rabbit.body.touching.down&&(t.fly_time>0&&!t.is_fly&&(t.is_fly=!0,t.fly_time-=3),t.rabbit.setVelocityY(-330)),t.is_move&&t.is_fly&&(t.fly_time-=1,t.rabbit.y<t.game.config.height/2&&t.rabbit.setVelocityY(-50)));let i=this.input.activePointer.positionToCamera(this.cameras.main);this.is_down&&(this.carrot.x=i.x,this.carrot.y=i.y+this.carrot.height/2)}};const a={type:Phaser.CANVAS,width:window.innerWidth,height:window.innerHeight,backgroundColor:15724527,scene:[h],physics:{default:"arcade",arcade:{gravity:{y:500},debug:!0}}};new Phaser.Game(a);function o(){let t=document.querySelector("canvas"),i=window.innerWidth,s=window.innerHeight,e=i/s,h=a.width/a.height;e<h?(t.style.width=i+"px",t.style.height=i/h+"px"):(t.style.width=s*h+"px",t.style.height=s+"px")}window.onload=(()=>{o(),window.addEventListener("resize",o,!1)})}]);