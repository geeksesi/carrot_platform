!function(t){var s={};function i(e){if(s[e])return s[e].exports;var h=s[e]={i:e,l:!1,exports:{}};return t[e].call(h.exports,h,h.exports,i),h.l=!0,h.exports}i.m=t,i.c=s,i.d=function(t,s,e){i.o(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:e})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,s){if(1&s&&(t=i(t)),8&s)return t;if(4&s&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&s&&"string"!=typeof t)for(var h in t)i.d(e,h,function(s){return t[s]}.bind(null,h));return e},i.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(s,"a",s),s},i.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},i.p="/build/",i(i.s=0)}([function(t,s,i){"use strict";i.r(s);var e=Phaser.Class({Extends:Phaser.Physics.Arcade.Sprite,initialize:function(t,s,i,e){Phaser.Physics.Arcade.Sprite.call(this,t,s,e,"enemy"),this.from_x=s,this.to_x=i,this.way=1,this.x_place=s,this.height=e,this.setPosition(this.x_place,this.height)},preUpdate:function(){1===this.way?(this.x_place+=2.5,this.x_place>this.to_x&&(this.way=-1)):(this.x_place-=2.5,this.x_place<this.from_x&&(this.way=1)),this.setPosition(this.x_place,this.height)}});var h=class extends Phaser.Scene{constructor(){super({key:"play_game"}),this.Enemy=e}preload(){this.load.image("out_way","assets/finish.png"),this.load.image("carrot","assets/carrot.png"),this.load.image("rabbit","assets/rabbit.png"),this.load.image("enemy","assets/enemy.png"),this.load.image("ground","assets/ground.jpg"),this.load.image("platform","assets/platforms.jpg"),this.load.image("hole","assets/hole.jpg")}create(){this.cameras.main.setBounds(0,0,3840,this.sys.game.config.height),this.physics.world.setBounds(0,0,3840,this.sys.game.config.height),this.finish=this.physics.add.staticGroup(),this.finish.create(3600,this.sys.game.config.height-150,"out_way"),this.holes=this.physics.add.staticGroup(),this.holes.create(850,this.sys.game.config.height-10,"hole"),this.holes.create(1750,this.sys.game.config.height-10,"hole"),this.holes.create(1850,this.sys.game.config.height-10,"hole"),this.platforms=this.physics.add.staticGroup(),this.platforms.create(400,this.sys.game.config.height-50,"ground"),this.platforms.create(1300,this.sys.game.config.height-50,"ground"),this.platforms.create(2280,this.sys.game.config.height-50,"ground"),this.platforms.create(3080,this.sys.game.config.height-50,"ground"),this.platforms.create(3880,this.sys.game.config.height-50,"ground"),this.platforms.create(4580,this.sys.game.config.height-50,"ground");const t=this.sys.game.config.height-119;this.enemys=this.physics.add.group({allowGravity:!1}),this.enemys.add(new this.Enemy(this,400,600,t),!0),this.enemys.add(new this.Enemy(this,1100,1300,t),!0),this.enemys.add(new this.Enemy(this,1250,1600,t),!0),this.enemys.add(new this.Enemy(this,3e3,3300,t),!0),this.player=this.physics.add.image(250,this.sys.game.config.height-140,"rabbit").setActive().setVelocity(0,0),this.player.setBounce(.2),this.player.setCollideWorldBounds(!0),this.physics.add.collider(this.player,this.platforms),this.physics.add.collider(this.enemys,this.platforms),this.physics.add.overlap(this.player,this.enemys,this.lose,null,this),this.physics.add.overlap(this.player,this.finish,this.win,null,this),this.physics.add.overlap(this.player,this.holes,this.lose,null,this),this.cameras.main.startFollow(this.player,!0,.05,.05),this.carrot=this.add.image(-10,-10,"carrot"),this.input.on("pointerdown",t=>{this.carrot.x=t.worldX,this.carrot.y=t.worldY}),this.input.on("pointerdown",t=>{this.is_down=!0,this.carrot.x=t.worldX,this.carrot.y=t.worldY}),this.input.on("pointermove",t=>{this.is_down&&(this.carrot.x=t.worldX,this.carrot.y=t.worldY)}),this.input.on("pointerup",()=>{this.is_down=!1,this.carrot.x=-10,this.carrot.y=-10})}lose(){alert("ooops you lose"),this.player.x=250,this.player.y=this.sys.game.config.height-140}win(){alert("you win"),this.player.x=250,this.player.y=this.sys.game.config.height-140}update(){let t=this.input.activePointer.positionToCamera(this.cameras.main);this.is_down&&(this.carrot.x=t.x,this.carrot.y=t.y),-10===this.carrot.x?this.player.setVelocityX(0):this.carrot.x-45>this.player.x?this.player.setVelocityX(250):this.carrot.x+45<this.player.x&&this.player.setVelocityX(-240),-10===this.carrot.y||this.carrot.y+80<this.player.y&&this.player.body.touching.down&&this.player.setVelocityY(-330)}};const r={type:Phaser.CANVAS,width:window.innerWidth,height:window.innerHeight,backgroundColor:15724527,scene:[h],physics:{default:"arcade",arcade:{gravity:{y:500},debug:!1}}};new Phaser.Game(r);function a(){let t=document.querySelector("canvas"),s=window.innerWidth,i=window.innerHeight,e=s/i,h=r.width/r.height;e<h?(t.style.width=s+"px",t.style.height=s/h+"px"):(t.style.width=i*h+"px",t.style.height=i+"px")}window.onload=(()=>{a(),window.addEventListener("resize",a,!1)})}]);